%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 81 210 529 583
%%Pages: 0
%%Creator: (BLT 3.0 Graph)
%%CreationDate: (Thu May  7 16:38:34 2015)
%%Title: (/renoir_data_00/jpreyes/stacks/notebook_files/ds9-plot3.ps)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments


% including file "./zvfsmntpt/blt3.0/bltGraph.pro"


%%BeginProlog
%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
  
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It is typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
    exch 4 2 roll moveto
    dup 0 rlineto
    exch 0 exch rlineto
    neg 0 rlineto
  closepath
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 
    4 2 roll moveto 
    lineto 
  closepath
  stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
      0 0 moveto 
      0 1 lineto 
      1 1 lineto 
      1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
} def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath 
      neg 0 
      moveto 0 
      lineto
    DrawSymbolProc
    newpath 
      neg 0 
      exch moveto 0 
      exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
      2 copy exch neg exch neg moveto 
      dup neg dup lineto
      2 copy neg exch neg lineto
      2 copy exch neg lineto
      dup dup neg lineto 
      2 copy neg lineto 2 copy lineto
      dup dup lineto 
      2 copy exch lineto 
      2 copy neg exch lineto
      dup dup neg exch lineto 
      exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  gsave
    3 copy pop moveto 
    newpath
      2 div 0 360 arc
    closepath 
    DrawSymbolProc
  grestore
} def

% Square
/Sq {
  % Stack: x y symbolSize
  gsave
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    DrawSymbolProc
  grestore
} def

% Line
/Li {
  % Stack: x y symbolSize
  gsave
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
      sub exch moveto 
      add exch lineto
    closepath
    stroke
  grestore
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath 
      moveto				% point 1;  b2
      dup 30 sin 30 cos div mul		% h2 = height below center point
      2 copy lineto			% point 2;  b2 h2
      exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def

%%EndProlog

%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
1 -1 scale
0 -792 translate

% User defined page layout

% Set color level
% Set origin
81 209 translate


%%EndSetup

12 /Helvetica SetFont
1 1 1 setrgbcolor
newpath
  43 25 moveto
  379 0 rlineto
  0 314 rlineto
  -379 0 rlineto
closepath
fill
newpath
  43 25 moveto
  379 0 rlineto
  0 314 rlineto
  -379 0 rlineto
closepath
gsave clip

% Axis x: grid line attributes
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis x: major grid line segments
newpath
  138.5 27 moveto 138.5 336 lineto
DashesProc stroke
  236.921 27 moveto 236.921 336 lineto
DashesProc stroke
  335.342 27 moveto 335.342 336 lineto
DashesProc stroke
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis x: minor grid line segments
newpath
  89.2895 27 moveto 89.2895 336 lineto
DashesProc stroke
  187.711 27 moveto 187.711 336 lineto
DashesProc stroke
  286.132 27 moveto 286.132 336 lineto
DashesProc stroke
  384.553 27 moveto 384.553 336 lineto
DashesProc stroke
% Axis y: grid line attributes
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis y: major grid line segments
newpath
  45 306.027 moveto 419 306.027 lineto
DashesProc stroke
  45 243.1 moveto 419 243.1 lineto
DashesProc stroke
  45 180.173 moveto 419 180.173 lineto
DashesProc stroke
  45 117.247 moveto 419 117.247 lineto
DashesProc stroke
  45 54.3199 moveto 419 54.3199 lineto
DashesProc stroke
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis y: minor grid line segments
newpath
  45 274.563 moveto 419 274.563 lineto
DashesProc stroke
  45 211.637 moveto 419 211.637 lineto
DashesProc stroke
  45 148.71 moveto 419 148.71 lineto
DashesProc stroke
  45 85.7833 moveto 419 85.7833 lineto
DashesProc stroke

% Element "s-1"

0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
% start trace
newpath
  45 110.871 moveto
  49.9211 110.871 lineto
  49.9211 107.493 lineto
  54.8421 107.493 lineto
  54.8421 120.084 lineto
  59.7632 120.084 lineto
  59.7632 136.332 lineto
  64.6842 136.332 lineto
  64.6842 120.167 lineto
  69.6053 120.167 lineto
  69.6053 99.3919 lineto
  74.5263 99.3919 lineto
  74.5263 119.041 lineto
  79.4474 119.041 lineto
  79.4474 117.911 lineto
  84.3684 117.911 lineto
  84.3684 127.828 lineto
  89.2895 127.828 lineto
  89.2895 110.536 lineto
  94.2105 110.536 lineto
  94.2105 120.518 lineto
  99.1316 120.518 lineto
  99.1316 111.151 lineto
  104.053 111.151 lineto
  104.053 109.677 lineto
  108.974 109.677 lineto
  108.974 124.12 lineto
  113.895 124.12 lineto
  113.895 123.933 lineto
  118.816 123.933 lineto
  118.816 113.679 lineto
  123.737 113.679 lineto
  123.737 113.236 lineto
  128.658 113.236 lineto
  128.658 111.3 lineto
  133.579 111.3 lineto
  133.579 98.4434 lineto
  138.5 98.4434 lineto
  138.5 121.183 lineto
  143.421 121.183 lineto
  143.421 118.431 lineto
  148.342 118.431 lineto
  148.342 121.593 lineto
  153.263 121.593 lineto
  153.263 121.593 lineto
  158.184 121.593 lineto
  158.184 107.46 lineto
  163.105 107.46 lineto
  163.105 120.389 lineto
  168.026 120.389 lineto
  168.026 127.648 lineto
  172.947 127.648 lineto
  172.947 123.107 lineto
  177.868 123.107 lineto
  177.868 123.107 lineto
  182.789 123.107 lineto
  182.789 125.091 lineto
  187.711 125.091 lineto
  187.711 112.687 lineto
  192.632 112.687 lineto
  192.632 123.551 lineto
  197.553 123.551 lineto
  197.553 150.463 lineto
  202.474 150.463 lineto
  202.474 150.463 lineto
  207.395 150.463 lineto
  207.395 181.908 lineto
  212.316 181.908 lineto
  212.316 213.945 lineto
  217.237 213.945 lineto
  217.237 278.96 lineto
  222.158 278.96 lineto
  222.158 336 lineto
  227.079 336 lineto
  227.079 267.734 lineto
  232 267.734 lineto
  232 27 lineto
  236.921 27 lineto
  236.921 118.685 lineto
  241.842 118.685 lineto
  241.842 251.968 lineto
  246.763 251.968 lineto
  246.763 333.829 lineto
  251.684 333.829 lineto
  251.684 327.08 lineto
  256.605 327.08 lineto
  256.605 245.963 lineto
  261.526 245.963 lineto
  261.526 170.255 lineto
  266.447 170.255 lineto
  266.447 142.449 lineto
  271.368 142.449 lineto
  271.368 149.673 lineto
  276.289 149.673 lineto
  276.289 145.389 lineto
  281.211 145.389 lineto
  281.211 125.389 lineto
  286.132 125.389 lineto
  286.132 115.687 lineto
  291.053 115.687 lineto
  291.053 127.698 lineto
  295.974 127.698 lineto
  295.974 117.78 lineto
  300.895 117.78 lineto
  300.895 116.093 lineto
  305.816 116.093 lineto
  305.816 120.647 lineto
  310.737 120.647 lineto
  310.737 110.918 lineto
  315.658 110.918 lineto
  315.658 114.872 lineto
  320.579 114.872 lineto
  320.579 116.76 lineto
  325.5 116.76 lineto
  325.5 110.993 lineto
  330.421 110.993 lineto
  330.421 113.264 lineto
  335.342 113.264 lineto
  335.342 136.157 lineto
  340.263 136.157 lineto
  340.263 114.069 lineto
  345.184 114.069 lineto
  345.184 118.45 lineto
  350.105 118.45 lineto
  350.105 125.684 lineto
  355.026 125.684 lineto
  355.026 111.617 lineto
  359.947 111.617 lineto
  359.947 105.802 lineto
  364.868 105.802 lineto
  364.868 105.802 lineto
  369.789 105.802 lineto
  369.789 119.304 lineto
  374.711 119.304 lineto
  374.711 98.4623 lineto
  379.632 98.4623 lineto
  379.632 102.778 lineto
  384.553 102.778 lineto
  384.553 110.323 lineto
  389.474 110.323 lineto
  389.474 110.323 lineto
  394.395 110.323 lineto
  394.395 88.7968 lineto
  399.316 88.7968 lineto
  399.316 98.3666 lineto
  404.237 98.3666 lineto
  404.237 103.484 lineto
  409.158 103.484 lineto
  409.158 111.421 lineto
  414.079 111.421 lineto
  414.079 111.421 lineto
  419 111.421 lineto
  419 107.451 lineto
DashesProc stroke
% end trace

% Unset clipping
grestore

1 1 1 setrgbcolor
% Margins
newpath
  0 0 moveto
  449 0 rlineto
  0 27 rlineto
  -449 0 rlineto
closepath
fill
newpath
  0 27 moveto
  45 0 rlineto
  0 309 rlineto
  -45 0 rlineto
closepath
fill
newpath
  419 27 moveto
  30 0 rlineto
  0 309 rlineto
  -30 0 rlineto
closepath
fill
newpath
  0 336 moveto
  449 0 rlineto
  0 38 rlineto
  -449 0 rlineto
closepath
fill
% Interior 3D border
1 1 1 setrgbcolor
newpath
  43 337 moveto
  378 0 rlineto
  0 1 rlineto
  -378 0 rlineto
closepath
fill
newpath
  420 25 moveto
  1 0 rlineto
  0 313 rlineto
  -1 0 rlineto
closepath
fill
0.509804 0.509804 0.509804 setrgbcolor
newpath
  43 338 moveto
  43 25 lineto
  421 25 lineto
  420 26 lineto
  44 26 lineto
  44 337 lineto
  43 338 lineto
  43 338 lineto
closepath
fill
0.509804 0.509804 0.509804 setrgbcolor
newpath
  44 336 moveto
  376 0 rlineto
  0 1 rlineto
  -376 0 rlineto
closepath
fill
newpath
  419 26 moveto
  1 0 rlineto
  0 311 rlineto
  -1 0 rlineto
closepath
fill
1 1 1 setrgbcolor
newpath
  44 337 moveto
  44 26 lineto
  420 26 lineto
  419 27 lineto
  45 27 lineto
  45 336 lineto
  44 337 lineto
  44 337 lineto
closepath
fill
% Graph title
53 11 0 232 12.5 BeginText
12 /Helvetica SetFont
0 0 0 setrgbcolor
(Projection) 53 0 9 DrawAdjText
EndText
% Axis "x"
45 16 0 138.5 356 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33474.307) 43 2 6 DrawAdjText
(15283.021) 43 2 14 DrawAdjText
EndText
45 16 0 236.921 356 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33486.472) 43 2 6 DrawAdjText
(15267.146) 43 2 14 DrawAdjText
EndText
45 16 0 335.342 356 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33498.637) 43 2 6 DrawAdjText
(15251.271) 43 2 14 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
newpath
  45 338 moveto 419 338 lineto
DashesProc stroke
  89.2895 338 moveto 89.2895 343 lineto
DashesProc stroke
  187.711 338 moveto 187.711 343 lineto
DashesProc stroke
  138.5 338 moveto 138.5 346 lineto
DashesProc stroke
  286.132 338 moveto 286.132 343 lineto
DashesProc stroke
  236.921 338 moveto 236.921 346 lineto
DashesProc stroke
  384.553 338 moveto 384.553 343 lineto
DashesProc stroke
  335.342 338 moveto 335.342 346 lineto
DashesProc stroke
% Axis "y"
68 8 90 12 180 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(Counts Average) 65 1 6 DrawAdjText
EndText
10 8 0 28 306.027 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(-6) 8 2 6 DrawAdjText
EndText
10 8 0 28 243.1 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(-4) 8 2 6 DrawAdjText
EndText
10 8 0 28 180.173 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(-2) 8 2 6 DrawAdjText
EndText
7 8 0 29.5 117.247 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(0) 5 2 6 DrawAdjText
EndText
7 8 0 29.5 54.3199 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(2) 5 2 6 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
newpath
  43 336 moveto 43 27 lineto
DashesProc stroke
  43 274.563 moveto 38 274.563 lineto
DashesProc stroke
  43 306.027 moveto 35 306.027 lineto
DashesProc stroke
  43 211.637 moveto 38 211.637 lineto
DashesProc stroke
  43 243.1 moveto 35 243.1 lineto
DashesProc stroke
  43 148.71 moveto 38 148.71 lineto
DashesProc stroke
  43 180.173 moveto 35 180.173 lineto
DashesProc stroke
  43 85.7833 moveto 38 85.7833 lineto
DashesProc stroke
  43 117.247 moveto 35 117.247 lineto
DashesProc stroke
  43 54.3199 moveto 35 54.3199 lineto
DashesProc stroke
showpage
%Trailer
grestore
end
%EOF
