%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 111 228 500 565
%%Pages: 0
%%Creator: (BLT 3.0 Graph)
%%CreationDate: (Thu May  7 16:37:48 2015)
%%Title: (/renoir_data_00/jpreyes/stacks/notebook_files/ds9-plot1.ps)
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica Courier
%%EndComments


% including file "./zvfsmntpt/blt3.0/bltGraph.pro"


%%BeginProlog
%
% PostScript prolog file of the BLT graph widget.
%
% Copyright 1989-1992 Regents of the University of California.
% Permission to use, copy, modify, and distribute this
% software and its documentation for any purpose and without
% fee is hereby granted, provided that the above copyright
% notice appear in all copies.  The University of California
% makes no representations about the suitability of this
% software for any purpose.  It is provided "as is" without
% express or implied warranty.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

200 dict begin

/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size
/BgColorProc 0 def			% Background color routine (symbols)
/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill
/StippleProc 0 def			% Stipple routine (bar segments)
/DashesProc 0 def			% Dashes routine (line segments)
  
% Define the array ISOLatin1Encoding (which specifies how characters are 
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 
% level 2 is supposed to define it, but level 1 doesn't). 
 
systemdict /ISOLatin1Encoding known not { 
  /ISOLatin1Encoding [ 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 
    /quoteright 
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 
    /zero /one /two /three /four /five /six /seven 
    /eight /nine /colon /semicolon /less /equal /greater /question 
    /at /A /B /C /D /E /F /G 
    /H /I /J /K /L /M /N /O 
    /P /Q /R /S /T /U /V /W 
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
    /quoteleft /a /b /c /d /e /f /g 
    /h /i /j /k /l /m /n /o 
    /p /q /r /s /t /u /v /w 
    /x /y /z /braceleft /bar /braceright /asciitilde /space 
    /space /space /space /space /space /space /space /space 
    /space /space /space /space /space /space /space /space 
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 
    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
    /registered /macron 
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 
    /periodcentered 
    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 
    /onehalf /threequarters /questiondown 
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 
    /Idieresis 
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 
    /germandbls 
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 
    /idieresis 
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 
    /ydieresis 
  ] def 
} if 

% font ISOEncode font 
% This procedure changes the encoding of a font from the default 
% Postscript encoding to ISOLatin1.  It is typically invoked just 
% before invoking "setfont".  The body of this procedure comes from 
% Section 5.6.1 of the Postscript book. 

/ISOEncode { 
  dup length dict
  begin 
    {1 index /FID ne {def} {pop pop} ifelse} forall 
    /Encoding ISOLatin1Encoding def 
    currentdict 
  end 

  % I'm not sure why it's necessary to use "definefont" on this new 
  % font, but it seems to be important; just use the name "Temporary" 
  % for the font. 

  /Temporary exch definefont 
} bind def 

/Stroke {
  gsave
    stroke
  grestore
} def

/Fill {
  gsave
    fill
  grestore
} def

/SetFont { 	
  % Stack: pointSize fontName
  findfont exch scalefont ISOEncode setfont
} def

/Box {
  % Stack: x y width height
  newpath
    exch 4 2 roll moveto
    dup 0 rlineto
    exch 0 exch rlineto
    neg 0 rlineto
  closepath
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
  % Compute exact number of device pixels per stipple dot.
  dup 0 matrix currentmatrix dtransform
  dup mul exch dup mul add sqrt

  % Round to an integer, make sure the number is at least 1, and compute
  % user coord distance corresponding to this.
  dup round dup 1 lt {pop 1} if
  exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/LS {	% Stack: x1 y1 x2 y2
  newpath 
    4 2 roll moveto 
    lineto 
  closepath
  stroke
} def

/EndText {
  %Stack :
  grestore
} def

/BeginText {
  %Stack :  w h theta centerX centerY
  gsave
    % Translate the origin to the center of bounding box and rotate
    translate neg rotate
    % Translate back to the origin of the text region
    -0.5 mul exch -0.5 mul exch translate
} def

/DrawAdjText {
  %Stack : str strWidth x y
  moveto				% Go to the text position
  exch dup dup 4 2 roll

  % Adjust character widths to get desired overall string width
  % adjust X = (desired width - real width)/#chars

  stringwidth pop sub exch
  length div
  0 3 -1 roll

  % Flip back the scale so that the string is not drawn in reverse

  gsave
    1 -1 scale
    ashow
  grestore
} def

/DrawBitmap {
  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr
  gsave
    6 -2 roll translate			% Translate to center of bounding box
    4 1 roll neg rotate			% Rotate by theta
    
    % Find upperleft corner of bounding box
    
    2 copy -.5 mul exch -.5 mul exch translate
    2 copy scale			% Make pixel unit scale
    newpath
      0 0 moveto 
      0 1 lineto 
      1 1 lineto 
      1 0 lineto
    closepath
    
    % Fill rectangle with background color
    
    4 -1 roll { 
      gsave 
	4 -1 roll exec fill 
      grestore 
    } if
    
    % Paint the image string into the unit rectangle
    
    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
    imagemask
  grestore
} def

% Symbols:

% Skinny-cross
/Sc {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Sp
  grestore
} def

% Skinny-plus
/Sp {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    2 idiv
    dup 2 copy
    newpath 
      neg 0 
      moveto 0 
      lineto
    DrawSymbolProc
    newpath 
      neg 0 
      exch moveto 0 
      exch lineto
    DrawSymbolProc
  grestore
} def

% Cross
/Cr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate 45 rotate
    0 0 3 -1 roll Pl
  grestore
} def

% Plus
/Pl {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    dup 2 idiv
    exch 6 idiv

    %
    %          2   3		The plus/cross symbol is a
    %				closed polygon of 12 points.
    %      0   1   4    5	The diagram to the left
    %           x,y		represents the positions of
    %     11  10   7    6	the points which are computed
    %				below.
    %          9   8
    %

    newpath
      2 copy exch neg exch neg moveto 
      dup neg dup lineto
      2 copy neg exch neg lineto
      2 copy exch neg lineto
      dup dup neg lineto 
      2 copy neg lineto 2 copy lineto
      dup dup lineto 
      2 copy exch lineto 
      2 copy neg exch lineto
      dup dup neg exch lineto 
      exch neg exch lineto
    closepath
    DrawSymbolProc
  grestore
} def

% Circle
/Ci {
  % Stack: x y symbolSize
  gsave
    3 copy pop moveto 
    newpath
      2 div 0 360 arc
    closepath 
    DrawSymbolProc
  grestore
} def

% Square
/Sq {
  % Stack: x y symbolSize
  gsave
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    DrawSymbolProc
  grestore
} def

% Line
/Li {
  % Stack: x y symbolSize
  gsave
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
      sub exch moveto 
      add exch lineto
    closepath
    stroke
  grestore
} def

% Diamond
/Di {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
  grestore
} def
    
% Triangle
/Tr {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
    neg					% b2 0 -h1
    newpath 
      moveto				% point 1;  b2
      dup 30 sin 30 cos div mul		% h2 = height below center point
      2 copy lineto			% point 2;  b2 h2
      exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Arrow
/Ar {
  % Stack: x y symbolSize
  gsave
    3 -2 roll translate
    BaseRatio mul 0.5 mul		% Calculate 1/2 base
    dup 0 exch 30 cos mul		% h1 = height above center point
					% b2 0 h1
    newpath moveto			% point 1;  b2
    dup 30 sin 30 cos div mul		% h2 = height below center point
    neg					% -h2 b2
    2 copy lineto			% point 2;  b2 h2
    exch neg exch lineto		% 
    closepath
    DrawSymbolProc
  grestore
} def

% Bitmap
/Bm {
  % Stack: x y symbolSize
  gsave
    3 1 roll translate pop DrawSymbolProc
  grestore
} def

%%EndProlog

%%BeginSetup
gsave					% Save the graphics state

% Default line/text style parameters

1 setlinewidth				% width
1 setlinejoin				% join
0 setlinecap				% cap
[] 0 setdash				% dashes

0 0 0 setrgbcolor			% color

% Transform coordinate system to use X11 coordinates

% 1. Flip y-axis over by reversing the scale,
% 2. Translate the origin to the other side of the page,
%    making the origin the upper left corner
1 -1 scale
0 -792 translate

% User defined page layout

% Set color level
% Set origin
111 227 translate


%%EndSetup

12 /Helvetica SetFont
1 1 1 setrgbcolor
newpath
  45 25 moveto
  318 0 rlineto
  0 278 rlineto
  -318 0 rlineto
closepath
fill
newpath
  45 25 moveto
  318 0 rlineto
  0 278 rlineto
  -318 0 rlineto
closepath
gsave clip

% Axis x: grid line attributes
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis x: major grid line segments
newpath
  47 27 moveto 47 300 lineto
DashesProc stroke
  136.429 27 moveto 136.429 300 lineto
DashesProc stroke
  225.857 27 moveto 225.857 300 lineto
DashesProc stroke
  315.286 27 moveto 315.286 300 lineto
DashesProc stroke
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis x: minor grid line segments
newpath
  91.7143 27 moveto 91.7143 300 lineto
DashesProc stroke
  181.143 27 moveto 181.143 300 lineto
DashesProc stroke
  270.571 27 moveto 270.571 300 lineto
DashesProc stroke
  360 27 moveto 360 300 lineto
DashesProc stroke
% Axis y: grid line attributes
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis y: major grid line segments
newpath
  47 242.526 moveto 360 242.526 lineto
DashesProc stroke
  47 170.684 moveto 360 170.684 lineto
DashesProc stroke
  47 98.8421 moveto 360 98.8421 lineto
DashesProc stroke
  47 27 moveto 360 27 lineto
DashesProc stroke
0 setlinejoin
0 setlinecap
0.639216 0.639216 0.639216 setrgbcolor
1 setlinewidth
[  1] 0 setdash
/DashesProc {} def
% Axis y: minor grid line segments
newpath
  47 278.447 moveto 360 278.447 lineto
DashesProc stroke
  47 206.605 moveto 360 206.605 lineto
DashesProc stroke
  47 134.763 moveto 360 134.763 lineto
DashesProc stroke
  47 62.9211 moveto 360 62.9211 lineto
DashesProc stroke

% Element "s-1"

0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
/DashesProc {} def
% start trace
newpath
  51.4714 279.369 moveto
  55.9429 279.369 lineto
  55.9429 280.934 lineto
  60.4143 280.934 lineto
  60.4143 281.604 lineto
  64.8857 281.604 lineto
  64.8857 279.879 lineto
  69.3571 279.879 lineto
  69.3571 279.714 lineto
  73.8286 279.714 lineto
  73.8286 280.093 lineto
  78.3 280.093 lineto
  78.3 280.733 lineto
  82.7714 280.733 lineto
  82.7714 279.713 lineto
  87.2429 279.713 lineto
  87.2429 281.622 lineto
  91.7143 281.622 lineto
  91.7143 278.645 lineto
  96.1857 278.645 lineto
  96.1857 279.065 lineto
  100.657 279.065 lineto
  100.657 280.553 lineto
  105.129 280.553 lineto
  105.129 280.984 lineto
  109.6 280.984 lineto
  109.6 280.713 lineto
  114.071 280.713 lineto
  114.071 281.402 lineto
  118.543 281.402 lineto
  118.543 279.821 lineto
  123.014 279.821 lineto
  123.014 281.4 lineto
  127.486 281.4 lineto
  127.486 280.43 lineto
  131.957 280.43 lineto
  131.957 280.43 lineto
  136.429 280.43 lineto
  136.429 281.426 lineto
  140.9 281.426 lineto
  140.9 280.224 lineto
  145.371 280.224 lineto
  145.371 279.925 lineto
  149.843 279.925 lineto
  149.843 280.435 lineto
  154.314 280.435 lineto
  154.314 280.435 lineto
  158.786 280.435 lineto
  158.786 281.698 lineto
  163.257 281.698 lineto
  163.257 279.535 lineto
  167.729 279.535 lineto
  167.729 278.758 lineto
  172.2 278.758 lineto
  172.2 279.499 lineto
  176.671 279.499 lineto
  176.671 279.499 lineto
  181.143 279.499 lineto
  181.143 278.528 lineto
  185.614 278.528 lineto
  185.614 279.182 lineto
  190.086 279.182 lineto
  190.086 278.045 lineto
  194.557 278.045 lineto
  194.557 275.809 lineto
  199.029 275.809 lineto
  199.029 275.809 lineto
  203.5 275.809 lineto
  203.5 272.21 lineto
  207.971 272.21 lineto
  207.971 259.659 lineto
  212.443 259.659 lineto
  212.443 252.174 lineto
  216.914 252.174 lineto
  216.914 223.874 lineto
  221.386 223.874 lineto
  221.386 223.874 lineto
  225.857 223.874 lineto
  225.857 195.694 lineto
  230.329 195.694 lineto
  230.329 193.291 lineto
  234.8 193.291 lineto
  234.8 218.46 lineto
  239.271 218.46 lineto
  239.271 242.771 lineto
  243.743 242.771 lineto
  243.743 246.487 lineto
  248.214 246.487 lineto
  248.214 259.254 lineto
  252.686 259.254 lineto
  252.686 273.952 lineto
  257.157 273.952 lineto
  257.157 275.971 lineto
  261.629 275.971 lineto
  261.629 277.061 lineto
  266.1 277.061 lineto
  266.1 280.188 lineto
  270.571 280.188 lineto
  270.571 277.146 lineto
  275.043 277.146 lineto
  275.043 280.741 lineto
  279.514 280.741 lineto
  279.514 277.881 lineto
  283.986 277.881 lineto
  283.986 280.824 lineto
  288.457 280.824 lineto
  288.457 281.249 lineto
  292.929 281.249 lineto
  292.929 277.368 lineto
  297.4 277.368 lineto
  297.4 281.661 lineto
  301.871 281.661 lineto
  301.871 280.658 lineto
  306.343 280.658 lineto
  306.343 279.984 lineto
  310.814 279.984 lineto
  310.814 279.077 lineto
  315.286 279.077 lineto
  315.286 280.769 lineto
  319.757 280.769 lineto
  319.757 279.603 lineto
  324.229 279.603 lineto
  324.229 280.558 lineto
  328.7 280.558 lineto
  328.7 280.247 lineto
  333.171 280.247 lineto
  333.171 282.016 lineto
  337.643 282.016 lineto
  337.643 282.876 lineto
  342.114 282.876 lineto
  342.114 281.513 lineto
  346.586 281.513 lineto
  346.586 281.856 lineto
  351.057 281.856 lineto
  351.057 281.856 lineto
  355.529 281.856 lineto
  355.529 282.615 lineto
  360 282.615 lineto
  360 282.459 lineto
  360 282.459 lineto
DashesProc stroke
% end trace

% Unset clipping
grestore

1 1 1 setrgbcolor
% Margins
newpath
  0 0 moveto
  390 0 rlineto
  0 27 rlineto
  -390 0 rlineto
closepath
fill
newpath
  0 27 moveto
  47 0 rlineto
  0 273 rlineto
  -47 0 rlineto
closepath
fill
newpath
  360 27 moveto
  30 0 rlineto
  0 273 rlineto
  -30 0 rlineto
closepath
fill
newpath
  0 300 moveto
  390 0 rlineto
  0 38 rlineto
  -390 0 rlineto
closepath
fill
% Interior 3D border
1 1 1 setrgbcolor
newpath
  45 301 moveto
  317 0 rlineto
  0 1 rlineto
  -317 0 rlineto
closepath
fill
newpath
  361 25 moveto
  1 0 rlineto
  0 277 rlineto
  -1 0 rlineto
closepath
fill
0.509804 0.509804 0.509804 setrgbcolor
newpath
  45 302 moveto
  45 25 lineto
  362 25 lineto
  361 26 lineto
  46 26 lineto
  46 301 lineto
  45 302 lineto
  45 302 lineto
closepath
fill
0.509804 0.509804 0.509804 setrgbcolor
newpath
  46 300 moveto
  315 0 rlineto
  0 1 rlineto
  -315 0 rlineto
closepath
fill
newpath
  360 26 moveto
  1 0 rlineto
  0 275 rlineto
  -1 0 rlineto
closepath
fill
1 1 1 setrgbcolor
newpath
  46 301 moveto
  46 26 lineto
  361 26 lineto
  360 27 lineto
  47 27 lineto
  47 300 lineto
  46 301 lineto
  46 301 lineto
closepath
fill
% Graph title
53 11 0 203 12.5 BeginText
12 /Helvetica SetFont
0 0 0 setrgbcolor
(Projection) 53 0 9 DrawAdjText
EndText
% Axis "x"
45 16 0 136.429 320 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33473.911) 43 2 6 DrawAdjText
(15283.718) 43 2 14 DrawAdjText
EndText
45 16 0 225.857 320 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33486.089) 43 2 6 DrawAdjText
(15267.853) 43 2 14 DrawAdjText
EndText
45 16 0 315.286 320 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(33498.266) 43 2 6 DrawAdjText
(15251.987) 43 2 14 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
newpath
  47 302 moveto 360 302 lineto
DashesProc stroke
  91.7143 302 moveto 91.7143 307 lineto
DashesProc stroke
  47 302 moveto 47 310 lineto
DashesProc stroke
  181.143 302 moveto 181.143 307 lineto
DashesProc stroke
  136.429 302 moveto 136.429 310 lineto
DashesProc stroke
  270.571 302 moveto 270.571 307 lineto
DashesProc stroke
  225.857 302 moveto 225.857 310 lineto
DashesProc stroke
  360 302 moveto 360 307 lineto
DashesProc stroke
  315.286 302 moveto 315.286 310 lineto
DashesProc stroke
% Axis "y"
68 8 90 12 162 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(Counts Average) 65 1 6 DrawAdjText
EndText
12 8 0 29 242.526 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(10) 10 2 6 DrawAdjText
EndText
12 8 0 29 170.684 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(20) 10 2 6 DrawAdjText
EndText
12 8 0 29 98.8421 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(30) 10 2 6 DrawAdjText
EndText
12 8 0 29 27 BeginText
9 /Helvetica SetFont
0 0 0 setrgbcolor
(40) 10 2 6 DrawAdjText
EndText
0 setlinejoin
0 setlinecap
0 0 0 setrgbcolor
1 setlinewidth
[ ] 0 setdash
/DashesProc {} def
newpath
  45 300 moveto 45 27 lineto
DashesProc stroke
  45 278.447 moveto 40 278.447 lineto
DashesProc stroke
  45 206.605 moveto 40 206.605 lineto
DashesProc stroke
  45 242.526 moveto 37 242.526 lineto
DashesProc stroke
  45 134.763 moveto 40 134.763 lineto
DashesProc stroke
  45 170.684 moveto 37 170.684 lineto
DashesProc stroke
  45 62.9211 moveto 40 62.9211 lineto
DashesProc stroke
  45 98.8421 moveto 37 98.8421 lineto
DashesProc stroke
  45 27 moveto 37 27 lineto
DashesProc stroke
showpage
%Trailer
grestore
end
%EOF
